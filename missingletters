"""
Sample run:
$python q2.py
$Enter something: "abcdefghijklmnopqrstuvwxyz"

Note that the quotes are neessary.
"""

# alphabets is the hash table from characters to intergers. alphabets is an hash table(list) from integers to character.
# Both help in executing lookup in O(1) and hence, the over all complexity of the program is O(n)
def get_missing_letters(input_var):
	input_var=str.lower(input_var)
	alphabets={'a':0,'b':1,'c':2,'d':3,'e':4,'f':5,'g':6,'h':7,'i':8,'j':9,'k':10,'l':11,'m':12,'n':13,'o':14,'p':15,'q':16,'r':17,'s':18,'t':19,'u':20,'v':21,'w':22,'x':23,'y':24,'z':25}
	alphabets2=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
	nums=[0]*26
	#print nums
	for i in range(0,len(input_var)):
		if(input_var[i] in alphabets.keys()):
			nums[alphabets[input_var[i]]]=1
		
	stri=""
	for i in range(0,len(nums)):
		if nums[i]==0:
			stri=stri+alphabets2[i]
	return stri



input_var = input("Enter something: ")
print ("you entered:" + input_var)
print get_missing_letters(input_var)

